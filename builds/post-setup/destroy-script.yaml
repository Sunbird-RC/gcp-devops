steps:
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Authorize Cloud Build'
  entrypoint: 'bash'
  args:
    - -c
    - |
      apt-get install dnsutils jq -y &&
      cloudbuild_external_ip=$(dig @resolver4.opendns.com myip.opendns.com +short) &&
      old_cidr=$(gcloud container clusters describe ${_CLUSTER_NAME_} --zone=${_REGION_} --format json | jq -r '.masterAuthorizedNetworksConfig.cidrBlocks[] | .cidrBlock' | tr '\n' ',') &&
      gcloud container clusters update ${_CLUSTER_NAME_} --zone=${_REGION_} --enable-master-authorized-networks --master-authorized-networks "$old_cidr$cloudbuild_external_ip/32"
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'gcloud'
  args: ['container', 'clusters', 'get-credentials', '${_CLUSTER_NAME_}', '--project=${_PROJECT_ID_}', '--region=${_REGION_}']
- name: 'gcr.io/${_PROJECT_ID_}/helm:3.12.0'
  entrypoint: 'helm'
  args: ['uninstall', 'nginx-dev', '-n',  '${_NGINX_CONFIG_NAMESPACE_}']
- name: 'gcr.io/${_PROJECT_ID_}/helm:3.12.0'
  entrypoint: 'helm'
  args: ['uninstall', 'csi-secrets-store', '-n',  'kube-system']
#- name: 'gcr.io/cloud-builders/kubectl'
#  entrypoint: 'kubectl'
#  args: ['delete', '-f', '${_IPMASQ_CONFIG_PATH_}', '-n', 'kube-system']
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'kubectl'
  args: ['delete', '-f', '${_STORAGE_CLASS_CONFIG_PATH_}']
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'kubectl'
  args: ['delete', '-f', '${_CSI_PLUGIN_PATH_}']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Remove worker cidr'
  entrypoint: 'bash'
  args:
    - -c
    - |
      apt-get install dnsutils jq -y &&
      cloudbuild_external_ip=$(dig @resolver4.opendns.com myip.opendns.com +short) &&
      old_cidr=$(gcloud container clusters describe ${_CLUSTER_NAME_} --zone=${_REGION_} --format json | jq -r '.masterAuthorizedNetworksConfig.cidrBlocks[] | .cidrBlock' | tr '\n' ',') &&
      old_cidr=${old_cidr//",$cloudbuild_external_ip/32,"/}
      gcloud container clusters update ${_CLUSTER_NAME_} --zone=${_REGION_} --enable-master-authorized-networks --master-authorized-networks "$old_cidr"
tags: ['cloud-builders-community']
serviceAccount: "projects/${_PROJECT_ID_}/serviceAccounts/${_SERVICE_ACCOUNT_}"
logsBucket: "gs://${_LOG_BUCKET_}"
substitutions:
  _PROJECT_ID_: ''
  _SERVICE_ACCOUNT_: ''
  _REGION_: ''
  _CLUSTER_NAME_: ''
  _NGINX_CONFIG_NAMESPACE_: ''
  _STORAGE_CLASS_CONFIG_PATH_: ''
  _CSI_PLUGIN_PATH_: ''
  _LOG_BUCKET_: ''
options:
    dynamicSubstitutions: true
    workerPool:
      'projects/${_PROJECT_ID_}/locations/${_REGION_}/workerPools/cloudbuild-private-worker-pool'
